{"version":3,"sources":["components/ErrorPage.jsx","components/PageLoader.jsx","components/MapContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["ErrorPage","alt","src","width","height","className","PageLoader","isVisible","id","type","color","visible","ipdata","IPData","process","MapContainer","useState","userData","setUserData","showError","setShowError","mapRef","useRef","onMapLoad","useCallback","map","current","getIp","a","lookup","data","checkData","useEffect","latitude","longitude","country_name","city","message","console","log","coffeeImage","googleMapsApiKey","mapContainerStyle","zoom","center","lat","lng","options","disableDefaultUI","onLoad","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAEe,SAASA,IACtB,OACE,qCACE,uBACA,mDACA,qBACEC,IAAI,iBACJC,IAAI,8DACJC,MAAM,MACNC,OAAO,MACPC,UAAU,gBAEZ,0DACyB,uBADzB,sF,qBCXS,SAASC,EAAT,GAAoC,IAAdC,EAAa,EAAbA,UACnC,OACE,qBAAKC,GAAG,mBAAR,SACE,cAAC,IAAD,CACEC,KAAK,eACLC,MAAM,SACNN,OAAQ,IACRD,MAAO,IACPQ,QAASJ,MCLjB,IAAMK,EAAS,IAAIC,IAAOC,4DAEX,SAASC,IAAgB,IAAD,EACLC,qBADK,mBAC9BC,EAD8B,KACpBC,EADoB,OAEHF,oBAAS,GAFN,mBAE9BG,EAF8B,KAEnBC,EAFmB,KAI/BC,EAASC,mBAETC,EAAYC,uBAAY,SAACC,GAC7BJ,EAAOK,QAAUD,IAChB,IAEGE,EAAQH,sBAAW,sBAAC,4BAAAI,EAAA,+EAEHhB,EAAOiB,SAFJ,OAEhBC,EAFgB,OAGtBC,EAAUD,GACVZ,EAAYY,GAJU,gDAMtBV,GAAa,GANS,yDAQvB,IAEHY,qBAAU,WACRL,MACC,IAEH,IAAMI,EAAY,SAACD,GACZA,EAAKG,UAAaH,EAAKI,WAAcJ,EAAKK,cAAiBL,EAAKM,OACnEhB,GAAa,GACbU,EAAKO,SACHC,QAAQC,IACN,iBACA,6EACAT,EAAKO,SAETC,QAAQC,IACN,6EACA,gFAoBN,IAAKtB,EACH,OAAO,cAACX,EAAD,CAAYC,WAAYY,IAGjC,GAAIA,EACF,OAAO,cAACnB,EAAD,IAGT,IAAMwC,EACJ,qBACEvC,IAAI,iBACJC,IAAI,8DACJC,MAAM,KACNC,OAAO,KACPC,UAAU,gBAId,OACE,qCACE,qBAAIG,GAAG,UAAP,UACGgC,EADH,aAC0BA,KAE1B,sBAAKhC,GAAG,gBAAR,UACE,cAAC,IAAD,CAAYiC,iBAAkB3B,0CAA9B,SACE,cAAC,IAAD,CACE4B,kBAzCQ,CAChBtC,OAAQ,OACRD,MAAO,QAwCCwC,KAAM,EACNC,OArCY,CACpBC,IAAK,SACLC,IAAK,IAoCGC,QAjCM,CACdC,kBAAkB,GAiCVC,OAAQ1B,EALV,SAOE,cAAC,IAAD,CACE2B,SAAU,CACRL,IAAK5B,EAASgB,SACda,IAAK7B,EAASiB,iBAKtB,wBAAO7B,UAAU,WAAjB,UACE,gCACE,qBAAIA,UAAU,cAAd,UACE,yCACA,2CAGJ,gCACE,+BACE,6BAAKY,EAASkB,eACd,6BAAKlB,EAASmB,qBCtGbe,MARf,WACE,OACE,qBAAK9C,UAAU,MAAf,SACE,cAACU,EAAD,OCMSqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6c9f69f2.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function ErrorPage() {\n  return (\n    <>\n      <br />\n      <h1>Page Not Found :(</h1>\n      <img\n        alt=\"TubbyNuggetGIF\"\n        src=\"https://media2.giphy.com/media/TiCpCknRXo0riYM94I/giphy.gif\"\n        width=\"300\"\n        height=\"300\"\n        className=\"tubbyNugget\"\n      />\n      <div>\n        An error has occurred. <br /> Please check the console tab in your\n        dev-tools for more specific information\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default function PageLoader({ isVisible }) {\n  return (\n    <div id=\"loader-container\">\n      <Loader\n        type=\"RevolvingDot\"\n        color=\"purple\"\n        height={150}\n        width={150}\n        visible={isVisible}\n      />\n    </div>\n  );\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport IPData from \"ipdata\";\nimport ErrorPage from \"./ErrorPage\";\nimport PageLoader from \"./PageLoader\";\n\nconst ipdata = new IPData(process.env.REACT_APP_IPDATA_KEY);\n\nexport default function MapContainer() {\n  const [userData, setUserData] = useState();\n  const [showError, setShowError] = useState(false);\n\n  const mapRef = useRef();\n\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  const getIp = useCallback(async () => {\n    try {\n      const data = await ipdata.lookup();\n      checkData(data);\n      setUserData(data);\n    } catch (e) {\n      setShowError(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    getIp();\n  }, []);\n\n  const checkData = (data) => {\n    if (!data.latitude || !data.longitude || !data.country_name || !data.city) {\n      setShowError(true);\n      data.message &&\n        console.log(\n          \"%cAPI MESSAGE!\",\n          \"font-weight: bold; background-color: red; color: yellow; padding: 1px 3px;\",\n          data.message\n        );\n      console.log(\n        \"%cProbably there is a problem with the api keys - quota exceeded and so on\",\n        \"font-weight: bold; background-color: red; color: yellow; padding: 1px 3px;\"\n      );\n    }\n  };\n\n  const mapStyles = {\n    height: \"70vh\",\n    width: \"70vw\",\n  };\n\n  /* Just about the center of Israel */\n  const defaultCenter = {\n    lat: 31.58503,\n    lng: 35,\n  };\n\n  const options = {\n    disableDefaultUI: true,\n  };\n\n  if (!userData) {\n    return <PageLoader isVisible={!showError} />;\n  }\n\n  if (showError) {\n    return <ErrorPage />;\n  }\n\n  const coffeeImage = (\n    <img\n      alt=\"TubbyNuggetGIF\"\n      src=\"https://media0.giphy.com/media/H5vrCaAXnBEslTZwMM/giphy.gif\"\n      width=\"50\"\n      height=\"50\"\n      className=\"tubbyNugget\"\n    />\n  );\n\n  return (\n    <>\n      <h1 id=\"welcome\">\n        {coffeeImage} Welcome! {coffeeImage}\n      </h1>\n      <div id=\"map-container\">\n        <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_KEY}>\n          <GoogleMap\n            mapContainerStyle={mapStyles}\n            zoom={7}\n            center={defaultCenter}\n            options={options}\n            onLoad={onMapLoad}\n          >\n            <Marker\n              position={{\n                lat: userData.latitude,\n                lng: userData.longitude,\n              }}\n            />\n          </GoogleMap>\n        </LoadScript>\n        <table className=\"geo-info\">\n          <thead>\n            <tr className=\"geo-headers\">\n              <th>Country</th>\n              <th>City</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{userData.country_name}</td>\n              <td>{userData.city}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n","import './App.css';\nimport MapContainer from './components/MapContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MapContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}